import { Component, Input, ChangeDetectionStrategy } from '@angular/core';
import { NodeService } from '../node.service';
import * as i0 from "@angular/core";
import * as i1 from "../node.service";
import * as i2 from "@angular/common";
import * as i3 from "../socket/socket.component";
import * as i4 from "../control.directive";
import * as i5 from "../socket.directive";
import * as i6 from "../kebab.pipe";
export class NodeComponent {
    service;
    cdr;
    editor;
    node;
    bindSocket;
    bindControl;
    constructor(service, cdr) {
        this.service = service;
        this.cdr = cdr;
    }
    ngOnInit() {
        this.service.setBindings(this.bindSocket, this.bindControl);
        this.node.update = () => this.cdr.detectChanges();
    }
    get inputs() {
        return Array.from(this.node.inputs.values());
    }
    get outputs() {
        return Array.from(this.node.outputs.values());
    }
    get controls() {
        return Array.from(this.node.controls.values());
    }
    selected() {
        return this.editor.selected.contains(this.node) ? 'selected' : '';
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.2", ngImport: i0, type: NodeComponent, deps: [{ token: i1.NodeService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.2", type: NodeComponent, selector: "ng-component", inputs: { editor: "editor", node: "node", bindSocket: "bindSocket", bindControl: "bindControl" }, providers: [NodeService], ngImport: i0, template: "<div class=\"node\" [ngClass]=\"[selected(), node.name] | kebab\">\n    <div class=\"title\">{{node.name}}</div>\n    <div class=\"output\" *ngFor=\"let output of outputs\">\n        <div class=\"output-title\">{{output.name}}</div>\n        <rete-socket rete-socket [io]=\"output\" [socket]=\"output.socket\"></rete-socket>\n    </div>\n    <div class=\"control\" *ngFor=\"let control of controls\" [rete-control]=\"control\"></div>\n    <div class=\"input\" *ngFor=\"let input of inputs\">\n        <rete-socket rete-socket [io]=\"input\" [socket]=\"input.socket\"></rete-socket>\n        <div class=\"input-title\" *ngIf=\"!input.showControl()\">{{input.name}}</div>\n        <div class=\"input-control\" *ngIf=\"input.showControl()\" [rete-control]=\"input.control\"></div>\n    </div>\n</div>", styles: [".node{background:rgba(110,136,255,.8);border:2px solid #4e58bf;border-radius:10px;cursor:pointer;min-width:180px;height:auto;padding-bottom:6px;box-sizing:content-box;position:relative;-webkit-user-select:none;user-select:none}.node:hover{background:rgba(130,153,255,.8)}.node.selected{background:#ffd92c;border-color:#e3c000}.node .title{color:#fff;font-family:sans-serif;font-size:18px;padding:8px}.node .output{text-align:right}.node .input{text-align:left}.node .input-title,.node .output-title{vertical-align:middle;color:#fff;display:inline-block;font-family:sans-serif;font-size:14px;margin:6px;line-height:24px}.node .input-title[hidden],.node .output-title[hidden]{display:none}.node .input-control{z-index:1;width:calc(100% - 36px);vertical-align:middle;display:inline-block}.node .control{padding:6px 18px}\n"], dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.SocketComponent, selector: "rete-socket", inputs: ["socket", "io"] }, { kind: "directive", type: i4.ControlDirective, selector: "[rete-control]", inputs: ["rete-control"] }, { kind: "directive", type: i5.SocketDirective, selector: "[rete-socket]", inputs: ["io"] }, { kind: "pipe", type: i6.KebabPipe, name: "kebab" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.2", ngImport: i0, type: NodeComponent, decorators: [{
            type: Component,
            args: [{ providers: [NodeService], changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"node\" [ngClass]=\"[selected(), node.name] | kebab\">\n    <div class=\"title\">{{node.name}}</div>\n    <div class=\"output\" *ngFor=\"let output of outputs\">\n        <div class=\"output-title\">{{output.name}}</div>\n        <rete-socket rete-socket [io]=\"output\" [socket]=\"output.socket\"></rete-socket>\n    </div>\n    <div class=\"control\" *ngFor=\"let control of controls\" [rete-control]=\"control\"></div>\n    <div class=\"input\" *ngFor=\"let input of inputs\">\n        <rete-socket rete-socket [io]=\"input\" [socket]=\"input.socket\"></rete-socket>\n        <div class=\"input-title\" *ngIf=\"!input.showControl()\">{{input.name}}</div>\n        <div class=\"input-control\" *ngIf=\"input.showControl()\" [rete-control]=\"input.control\"></div>\n    </div>\n</div>", styles: [".node{background:rgba(110,136,255,.8);border:2px solid #4e58bf;border-radius:10px;cursor:pointer;min-width:180px;height:auto;padding-bottom:6px;box-sizing:content-box;position:relative;-webkit-user-select:none;user-select:none}.node:hover{background:rgba(130,153,255,.8)}.node.selected{background:#ffd92c;border-color:#e3c000}.node .title{color:#fff;font-family:sans-serif;font-size:18px;padding:8px}.node .output{text-align:right}.node .input{text-align:left}.node .input-title,.node .output-title{vertical-align:middle;color:#fff;display:inline-block;font-family:sans-serif;font-size:14px;margin:6px;line-height:24px}.node .input-title[hidden],.node .output-title[hidden]{display:none}.node .input-control{z-index:1;width:calc(100% - 36px);vertical-align:middle;display:inline-block}.node .control{padding:6px 18px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.NodeService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { editor: [{
                type: Input
            }], node: [{
                type: Input
            }], bindSocket: [{
                type: Input
            }], bindControl: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbm9kZS9ub2RlLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uL3NyYy9ub2RlL25vZGUuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsdUJBQXVCLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBRTdGLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7Ozs7Ozs7QUFROUMsTUFBTSxPQUFPLGFBQWE7SUFNRjtJQUFnQztJQUw3QyxNQUFNLENBQWM7SUFDcEIsSUFBSSxDQUFRO0lBQ1osVUFBVSxDQUFZO0lBQ3RCLFdBQVcsQ0FBWTtJQUVoQyxZQUFzQixPQUFvQixFQUFZLEdBQXNCO1FBQXRELFlBQU8sR0FBUCxPQUFPLENBQWE7UUFBWSxRQUFHLEdBQUgsR0FBRyxDQUFtQjtJQUFHLENBQUM7SUFFaEYsUUFBUTtRQUNOLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzVELElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDcEQsQ0FBQztJQUVELElBQUksTUFBTTtRQUNSLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFRCxJQUFJLE9BQU87UUFDVCxPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBRUQsSUFBSSxRQUFRO1FBQ1YsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELFFBQVE7UUFDTixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQ3BFLENBQUM7dUdBM0JVLGFBQWE7MkZBQWIsYUFBYSx5SUFIYixDQUFDLFdBQVcsQ0FBQywwQkNQMUIsK3hCQVlNOzsyRkRGTyxhQUFhO2tCQU56QixTQUFTO2dDQUdHLENBQUMsV0FBVyxDQUFDLG1CQUNQLHVCQUF1QixDQUFDLE1BQU07a0lBR3RDLE1BQU07c0JBQWQsS0FBSztnQkFDRyxJQUFJO3NCQUFaLEtBQUs7Z0JBQ0csVUFBVTtzQkFBbEIsS0FBSztnQkFDRyxXQUFXO3NCQUFuQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOb2RlRWRpdG9yLCBOb2RlLCBJbnB1dCBhcyBSZXRlSW5wdXQsIE91dHB1dCBhcyBSZXRlT3V0cHV0LCBDb250cm9sIGFzIFJldGVDb250cm9sIH0gZnJvbSAncmV0ZSc7XG5pbXBvcnQgeyBOb2RlU2VydmljZSB9IGZyb20gJy4uL25vZGUuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICB0ZW1wbGF0ZVVybDogJy4vbm9kZS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL25vZGUuY29tcG9uZW50LnNhc3MnXSxcbiAgcHJvdmlkZXJzOiBbTm9kZVNlcnZpY2VdLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBOb2RlQ29tcG9uZW50IHtcbiAgQElucHV0KCkgZWRpdG9yITogTm9kZUVkaXRvcjtcbiAgQElucHV0KCkgbm9kZSE6IE5vZGU7XG4gIEBJbnB1dCgpIGJpbmRTb2NrZXQhOiBGdW5jdGlvbjtcbiAgQElucHV0KCkgYmluZENvbnRyb2whOiBGdW5jdGlvbjtcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgc2VydmljZTogTm9kZVNlcnZpY2UsIHByb3RlY3RlZCBjZHI6IENoYW5nZURldGVjdG9yUmVmKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2VydmljZS5zZXRCaW5kaW5ncyh0aGlzLmJpbmRTb2NrZXQsIHRoaXMuYmluZENvbnRyb2wpO1xuICAgIHRoaXMubm9kZS51cGRhdGUgPSAoKSA9PiB0aGlzLmNkci5kZXRlY3RDaGFuZ2VzKCk7XG4gIH1cblxuICBnZXQgaW5wdXRzKCkge1xuICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMubm9kZS5pbnB1dHMudmFsdWVzKCkpO1xuICB9XG5cbiAgZ2V0IG91dHB1dHMoKSB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5ub2RlLm91dHB1dHMudmFsdWVzKCkpO1xuICB9XG5cbiAgZ2V0IGNvbnRyb2xzKCkge1xuICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMubm9kZS5jb250cm9scy52YWx1ZXMoKSk7XG4gIH1cblxuICBzZWxlY3RlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5lZGl0b3Iuc2VsZWN0ZWQuY29udGFpbnModGhpcy5ub2RlKSA/ICdzZWxlY3RlZCcgOiAnJztcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cIm5vZGVcIiBbbmdDbGFzc109XCJbc2VsZWN0ZWQoKSwgbm9kZS5uYW1lXSB8IGtlYmFiXCI+XG4gICAgPGRpdiBjbGFzcz1cInRpdGxlXCI+e3tub2RlLm5hbWV9fTwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJvdXRwdXRcIiAqbmdGb3I9XCJsZXQgb3V0cHV0IG9mIG91dHB1dHNcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIm91dHB1dC10aXRsZVwiPnt7b3V0cHV0Lm5hbWV9fTwvZGl2PlxuICAgICAgICA8cmV0ZS1zb2NrZXQgcmV0ZS1zb2NrZXQgW2lvXT1cIm91dHB1dFwiIFtzb2NrZXRdPVwib3V0cHV0LnNvY2tldFwiPjwvcmV0ZS1zb2NrZXQ+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImNvbnRyb2xcIiAqbmdGb3I9XCJsZXQgY29udHJvbCBvZiBjb250cm9sc1wiIFtyZXRlLWNvbnRyb2xdPVwiY29udHJvbFwiPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJpbnB1dFwiICpuZ0Zvcj1cImxldCBpbnB1dCBvZiBpbnB1dHNcIj5cbiAgICAgICAgPHJldGUtc29ja2V0IHJldGUtc29ja2V0IFtpb109XCJpbnB1dFwiIFtzb2NrZXRdPVwiaW5wdXQuc29ja2V0XCI+PC9yZXRlLXNvY2tldD5cbiAgICAgICAgPGRpdiBjbGFzcz1cImlucHV0LXRpdGxlXCIgKm5nSWY9XCIhaW5wdXQuc2hvd0NvbnRyb2woKVwiPnt7aW5wdXQubmFtZX19PC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJpbnB1dC1jb250cm9sXCIgKm5nSWY9XCJpbnB1dC5zaG93Q29udHJvbCgpXCIgW3JldGUtY29udHJvbF09XCJpbnB1dC5jb250cm9sXCI+PC9kaXY+XG4gICAgPC9kaXY+XG48L2Rpdj4iXX0=